### YamlMime:UniversalReference
items:
  - uid: Google::Cloud::Vision::V1::ProductSearchParams
    children: 
      - Google::Cloud::Vision::V1::ProductSearchParams#bounding_poly
      - Google::Cloud::Vision::V1::ProductSearchParams#product_set
      - Google::Cloud::Vision::V1::ProductSearchParams#product_categories
      - Google::Cloud::Vision::V1::ProductSearchParams#filter
    fullName: Google::Cloud::Vision::V1::ProductSearchParams
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: ProductSearchParams
    summary: "Parameters for a product search request."
    type: 'class'
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#bounding_poly
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#bounding_poly
    name: bounding_poly
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: bounding_poly
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#bounding_poly => ::Google::Cloud::Vision::V1::BoundingPoly"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::BoundingPoly"
          description: "The bounding polygon around the area of interest in the image.
If it is not specified, system discretion will be applied."
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#bounding_poly=
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#bounding_poly=
    name: bounding_poly=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: bounding_poly=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#bounding_poly= => ::Google::Cloud::Vision::V1::BoundingPoly"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::BoundingPoly"
          description: "The bounding polygon around the area of interest in the image.
If it is not specified, system discretion will be applied."
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#product_set
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#product_set
    name: product_set
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_set
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_set => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The resource name of a {::Google::Cloud::Vision::V1::ProductSet ProductSet} to be searched for similar images.

Format is:
`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`."
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#product_set=
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#product_set=
    name: product_set=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_set=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_set= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The resource name of a {::Google::Cloud::Vision::V1::ProductSet ProductSet} to be searched for similar images.

Format is:
`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`."
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#product_categories
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#product_categories
    name: product_categories
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_categories
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_categories => ::Array<::String>"
      parameters:
        []
      return:
          type:
            - "::Array<::String>"
          description: "The list of product categories to search in. Currently, we only consider
the first category, and either 'homegoods-v2', 'apparel-v2', 'toys-v2',
'packagedgoods-v1', or 'general-v1' should be specified. The legacy
categories 'homegoods', 'apparel', and 'toys' are still supported but will
be deprecated. For new products, please use 'homegoods-v2', 'apparel-v2',
or 'toys-v2' for better product search accuracy. It is recommended to
migrate existing products to these categories as well."
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#product_categories=
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#product_categories=
    name: product_categories=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_categories=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_categories= => ::Array<::String>"
      parameters:
        []
      return:
          type:
            - "::Array<::String>"
          description: "The list of product categories to search in. Currently, we only consider
the first category, and either 'homegoods-v2', 'apparel-v2', 'toys-v2',
'packagedgoods-v1', or 'general-v1' should be specified. The legacy
categories 'homegoods', 'apparel', and 'toys' are still supported but will
be deprecated. For new products, please use 'homegoods-v2', 'apparel-v2',
or 'toys-v2' for better product search accuracy. It is recommended to
migrate existing products to these categories as well."
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#filter
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#filter
    name: filter
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: filter
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#filter => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The filtering expression. This can be used to restrict search results based
on Product labels. We currently support an AND of OR of key-value
expressions, where each expression within an OR must have the same key. An
'=' should be used to connect the key and value.

For example, '(color = red OR color = blue) AND brand = Google' is
acceptable, but '(color = red OR brand = Google)' is not acceptable.
'color: red' is not acceptable because it uses a ':' instead of an '='."
  - uid: Google::Cloud::Vision::V1::ProductSearchParams#filter=
    fullName: Google::Cloud::Vision::V1::ProductSearchParams#filter=
    name: filter=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: filter=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#filter= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The filtering expression. This can be used to restrict search results based
on Product labels. We currently support an AND of OR of key-value
expressions, where each expression within an OR must have the same key. An
'=' should be used to connect the key and value.

For example, '(color = red OR color = blue) AND brand = Google' is
acceptable, but '(color = red OR brand = Google)' is not acceptable.
'color: red' is not acceptable because it uses a ':' instead of an '='."
references: []
