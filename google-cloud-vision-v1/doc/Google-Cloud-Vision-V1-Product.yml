### YamlMime:UniversalReference
items:
  - uid: Google::Cloud::Vision::V1::Product
    children: 
      - Google::Cloud::Vision::V1::Product#name
      - Google::Cloud::Vision::V1::Product#display_name
      - Google::Cloud::Vision::V1::Product#description
      - Google::Cloud::Vision::V1::Product#product_category
      - Google::Cloud::Vision::V1::Product#product_labels
      - Google::Cloud::Vision::V1::Product::KeyValue
    fullName: Google::Cloud::Vision::V1::Product
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: Product
    summary: "A Product contains ReferenceImages."
    type: 'class'
  - uid: Google::Cloud::Vision::V1::Product#name
    fullName: Google::Cloud::Vision::V1::Product#name
    name: name
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: name
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#name => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The resource name of the product.

Format is:
`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.

This field is ignored when creating a product."
  - uid: Google::Cloud::Vision::V1::Product#name=
    fullName: Google::Cloud::Vision::V1::Product#name=
    name: name=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: name=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#name= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The resource name of the product.

Format is:
`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.

This field is ignored when creating a product."
  - uid: Google::Cloud::Vision::V1::Product#display_name
    fullName: Google::Cloud::Vision::V1::Product#display_name
    name: display_name
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: display_name
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#display_name => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The user-provided name for this Product. Must not be empty. Must be at most
4096 characters long."
  - uid: Google::Cloud::Vision::V1::Product#display_name=
    fullName: Google::Cloud::Vision::V1::Product#display_name=
    name: display_name=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: display_name=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#display_name= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The user-provided name for this Product. Must not be empty. Must be at most
4096 characters long."
  - uid: Google::Cloud::Vision::V1::Product#description
    fullName: Google::Cloud::Vision::V1::Product#description
    name: description
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: description
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#description => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "User-provided metadata to be stored with this product. Must be at most 4096
characters long."
  - uid: Google::Cloud::Vision::V1::Product#description=
    fullName: Google::Cloud::Vision::V1::Product#description=
    name: description=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: description=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#description= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "User-provided metadata to be stored with this product. Must be at most 4096
characters long."
  - uid: Google::Cloud::Vision::V1::Product#product_category
    fullName: Google::Cloud::Vision::V1::Product#product_category
    name: product_category
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_category
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_category => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "Immutable. The category for the product identified by the reference image. This should
be one of 'homegoods-v2', 'apparel-v2', 'toys-v2', 'packagedgoods-v1' or
'general-v1'. The legacy categories 'homegoods', 'apparel', and 'toys' are
still supported, but these should not be used for new products."
  - uid: Google::Cloud::Vision::V1::Product#product_category=
    fullName: Google::Cloud::Vision::V1::Product#product_category=
    name: product_category=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_category=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_category= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "Immutable. The category for the product identified by the reference image. This should
be one of 'homegoods-v2', 'apparel-v2', 'toys-v2', 'packagedgoods-v1' or
'general-v1'. The legacy categories 'homegoods', 'apparel', and 'toys' are
still supported, but these should not be used for new products."
  - uid: Google::Cloud::Vision::V1::Product#product_labels
    fullName: Google::Cloud::Vision::V1::Product#product_labels
    name: product_labels
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_labels
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_labels => ::Array<::Google::Cloud::Vision::V1::Product::KeyValue>"
      parameters:
        []
      return:
          type:
            - "::Array<::Google::Cloud::Vision::V1::Product::KeyValue>"
          description: "Key-value pairs that can be attached to a product. At query time,
constraints can be specified based on the product_labels.

Note that integer values can be provided as strings, e.g. '1199'. Only
strings with integer values can match a range-based restriction which is
to be supported soon.

Multiple values can be assigned to the same key. One product may have up to
500 product_labels.

Notice that the total number of distinct product_labels over all products
in one ProductSet cannot exceed 1M, otherwise the product search pipeline
will refuse to work for that ProductSet."
  - uid: Google::Cloud::Vision::V1::Product#product_labels=
    fullName: Google::Cloud::Vision::V1::Product#product_labels=
    name: product_labels=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: product_labels=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#product_labels= => ::Array<::Google::Cloud::Vision::V1::Product::KeyValue>"
      parameters:
        []
      return:
          type:
            - "::Array<::Google::Cloud::Vision::V1::Product::KeyValue>"
          description: "Key-value pairs that can be attached to a product. At query time,
constraints can be specified based on the product_labels.

Note that integer values can be provided as strings, e.g. '1199'. Only
strings with integer values can match a range-based restriction which is
to be supported soon.

Multiple values can be assigned to the same key. One product may have up to
500 product_labels.

Notice that the total number of distinct product_labels over all products
in one ProductSet cannot exceed 1M, otherwise the product search pipeline
will refuse to work for that ProductSet."
references: 
  - uid: Google::Cloud::Vision::V1::Product::KeyValue
    fullName: Google::Cloud::Vision::V1::Product::KeyValue
    name: KeyValue
    module: google-cloud-vision-v1
    id: KeyValue
    summary: "A product label represented as a key-value pair."
    parent: Google::Cloud::Vision::V1::Product

