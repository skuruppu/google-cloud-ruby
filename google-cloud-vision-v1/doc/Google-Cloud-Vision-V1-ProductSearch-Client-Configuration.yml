### YamlMime:UniversalReference
items:
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration
    children: 
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#endpoint
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#credentials
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#scope
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_name
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_version
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#channel_args
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#interceptors
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#timeout
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#metadata
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#retry_policy
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#quota_project
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#rpcs
      - Google::Cloud::Vision::V1::ProductSearch::Client::Configuration::Rpcs
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: Configuration
    summary: "Configuration class for the ProductSearch API.

This class represents the configuration for ProductSearch,
providing control over timeouts, retry behavior, logging, transport
parameters, and other low-level controls. Certain parameters can also be
applied individually to specific RPCs. See
{::Google::Cloud::Vision::V1::ProductSearch::Client::Configuration::Rpcs}
for a list of RPCs that can be configured independently.

Configuration can be applied globally to all clients, or to a single client
on construction.

# Examples

To modify the global config, setting the timeout for create_product_set
to 20 seconds, and all remaining timeouts to 10 seconds:

    ::Google::Cloud::Vision::V1::ProductSearch::Client.configure do |config|
      config.timeout = 10.0
      config.rpcs.create_product_set.timeout = 20.0
    end

To apply the above configuration only to a new client:

    client = ::Google::Cloud::Vision::V1::ProductSearch::Client.new do |config|
      config.timeout = 10.0
      config.rpcs.create_product_set.timeout = 20.0
    end"
    type: 'class'
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#endpoint
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#endpoint
    name: endpoint
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: endpoint
    summary: "The hostname or hostname:port of the service endpoint.
Defaults to `'vision.googleapis.com'`."
    type: method
    syntax:
      description: "The hostname or hostname:port of the service endpoint.
Defaults to `'vision.googleapis.com'`."
      content: "#endpoint => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#endpoint=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#endpoint=
    name: endpoint=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: endpoint=
    summary: "The hostname or hostname:port of the service endpoint.
Defaults to `'vision.googleapis.com'`."
    type: method
    syntax:
      description: "The hostname or hostname:port of the service endpoint.
Defaults to `'vision.googleapis.com'`."
      content: "#endpoint= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#credentials
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#credentials
    name: credentials
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: credentials
    summary: "Credentials to send with calls. You may provide any of the following types:
 *  (`String`) The path to a service account key file in JSON format
 *  (`Hash`) A service account key as a Hash
 *  (`Google::Auth::Credentials`) A googleauth credentials object
    (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
 *  (`Signet::OAuth2::Client`) A signet oauth2 client object
    (see the [signet docs](https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html))
 *  (`GRPC::Core::Channel`) a gRPC channel with included credentials
 *  (`GRPC::Core::ChannelCredentials`) a gRPC credentails object
 *  (`nil`) indicating no credentials"
    type: method
    syntax:
      description: "Credentials to send with calls. You may provide any of the following types:
 *  (`String`) The path to a service account key file in JSON format
 *  (`Hash`) A service account key as a Hash
 *  (`Google::Auth::Credentials`) A googleauth credentials object
    (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
 *  (`Signet::OAuth2::Client`) A signet oauth2 client object
    (see the [signet docs](https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html))
 *  (`GRPC::Core::Channel`) a gRPC channel with included credentials
 *  (`GRPC::Core::ChannelCredentials`) a gRPC credentails object
 *  (`nil`) indicating no credentials"
      content: "#credentials => ::Object"
      parameters:
        []
      return:
          type:
            - "::Object"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#credentials=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#credentials=
    name: credentials=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: credentials=
    summary: "Credentials to send with calls. You may provide any of the following types:
 *  (`String`) The path to a service account key file in JSON format
 *  (`Hash`) A service account key as a Hash
 *  (`Google::Auth::Credentials`) A googleauth credentials object
    (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
 *  (`Signet::OAuth2::Client`) A signet oauth2 client object
    (see the [signet docs](https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html))
 *  (`GRPC::Core::Channel`) a gRPC channel with included credentials
 *  (`GRPC::Core::ChannelCredentials`) a gRPC credentails object
 *  (`nil`) indicating no credentials"
    type: method
    syntax:
      description: "Credentials to send with calls. You may provide any of the following types:
 *  (`String`) The path to a service account key file in JSON format
 *  (`Hash`) A service account key as a Hash
 *  (`Google::Auth::Credentials`) A googleauth credentials object
    (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
 *  (`Signet::OAuth2::Client`) A signet oauth2 client object
    (see the [signet docs](https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html))
 *  (`GRPC::Core::Channel`) a gRPC channel with included credentials
 *  (`GRPC::Core::ChannelCredentials`) a gRPC credentails object
 *  (`nil`) indicating no credentials"
      content: "#credentials= => ::Object"
      parameters:
        []
      return:
          type:
            - "::Object"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#scope
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#scope
    name: scope
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: scope
    summary: "The OAuth scopes"
    type: method
    syntax:
      description: "The OAuth scopes"
      content: "#scope => ::Array<::String>"
      parameters:
        []
      return:
          type:
            - "::Array<::String>"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#scope=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#scope=
    name: scope=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: scope=
    summary: "The OAuth scopes"
    type: method
    syntax:
      description: "The OAuth scopes"
      content: "#scope= => ::Array<::String>"
      parameters:
        []
      return:
          type:
            - "::Array<::String>"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_name
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_name
    name: lib_name
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: lib_name
    summary: "The library name as recorded in instrumentation and logging"
    type: method
    syntax:
      description: "The library name as recorded in instrumentation and logging"
      content: "#lib_name => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_name=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_name=
    name: lib_name=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: lib_name=
    summary: "The library name as recorded in instrumentation and logging"
    type: method
    syntax:
      description: "The library name as recorded in instrumentation and logging"
      content: "#lib_name= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_version
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_version
    name: lib_version
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: lib_version
    summary: "The library version as recorded in instrumentation and logging"
    type: method
    syntax:
      description: "The library version as recorded in instrumentation and logging"
      content: "#lib_version => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_version=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#lib_version=
    name: lib_version=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: lib_version=
    summary: "The library version as recorded in instrumentation and logging"
    type: method
    syntax:
      description: "The library version as recorded in instrumentation and logging"
      content: "#lib_version= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#channel_args
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#channel_args
    name: channel_args
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: channel_args
    summary: "Extra parameters passed to the gRPC channel. Note: this is ignored if a
`GRPC::Core::Channel` object is provided as the credential."
    type: method
    syntax:
      description: "Extra parameters passed to the gRPC channel. Note: this is ignored if a
`GRPC::Core::Channel` object is provided as the credential."
      content: "#channel_args => ::Hash"
      parameters:
        []
      return:
          type:
            - "::Hash"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#channel_args=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#channel_args=
    name: channel_args=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: channel_args=
    summary: "Extra parameters passed to the gRPC channel. Note: this is ignored if a
`GRPC::Core::Channel` object is provided as the credential."
    type: method
    syntax:
      description: "Extra parameters passed to the gRPC channel. Note: this is ignored if a
`GRPC::Core::Channel` object is provided as the credential."
      content: "#channel_args= => ::Hash"
      parameters:
        []
      return:
          type:
            - "::Hash"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#interceptors
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#interceptors
    name: interceptors
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: interceptors
    summary: "An array of interceptors that are run before calls are executed."
    type: method
    syntax:
      description: "An array of interceptors that are run before calls are executed."
      content: "#interceptors => ::Array<::GRPC::ClientInterceptor>"
      parameters:
        []
      return:
          type:
            - "::Array<::GRPC::ClientInterceptor>"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#interceptors=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#interceptors=
    name: interceptors=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: interceptors=
    summary: "An array of interceptors that are run before calls are executed."
    type: method
    syntax:
      description: "An array of interceptors that are run before calls are executed."
      content: "#interceptors= => ::Array<::GRPC::ClientInterceptor>"
      parameters:
        []
      return:
          type:
            - "::Array<::GRPC::ClientInterceptor>"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#timeout
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#timeout
    name: timeout
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: timeout
    summary: "The call timeout in seconds."
    type: method
    syntax:
      description: "The call timeout in seconds."
      content: "#timeout => ::Numeric"
      parameters:
        []
      return:
          type:
            - "::Numeric"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#timeout=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#timeout=
    name: timeout=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: timeout=
    summary: "The call timeout in seconds."
    type: method
    syntax:
      description: "The call timeout in seconds."
      content: "#timeout= => ::Numeric"
      parameters:
        []
      return:
          type:
            - "::Numeric"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#metadata
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#metadata
    name: metadata
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: metadata
    summary: "Additional gRPC headers to be sent with the call."
    type: method
    syntax:
      description: "Additional gRPC headers to be sent with the call."
      content: "#metadata => ::Hash{::Symbol=>::String}"
      parameters:
        []
      return:
          type:
            - "::Hash{::Symbol=>::String}"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#metadata=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#metadata=
    name: metadata=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: metadata=
    summary: "Additional gRPC headers to be sent with the call."
    type: method
    syntax:
      description: "Additional gRPC headers to be sent with the call."
      content: "#metadata= => ::Hash{::Symbol=>::String}"
      parameters:
        []
      return:
          type:
            - "::Hash{::Symbol=>::String}"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#retry_policy
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#retry_policy
    name: retry_policy
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: retry_policy
    summary: "The retry policy. The value is a hash with the following keys:
 *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
 *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
 *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
 *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
    trigger a retry."
    type: method
    syntax:
      description: "The retry policy. The value is a hash with the following keys:
 *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
 *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
 *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
 *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
    trigger a retry."
      content: "#retry_policy => ::Hash"
      parameters:
        []
      return:
          type:
            - "::Hash"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#retry_policy=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#retry_policy=
    name: retry_policy=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: retry_policy=
    summary: "The retry policy. The value is a hash with the following keys:
 *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
 *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
 *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
 *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
    trigger a retry."
    type: method
    syntax:
      description: "The retry policy. The value is a hash with the following keys:
 *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
 *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
 *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
 *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
    trigger a retry."
      content: "#retry_policy= => ::Hash"
      parameters:
        []
      return:
          type:
            - "::Hash"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#quota_project
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#quota_project
    name: quota_project
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: quota_project
    summary: "A separate project against which to charge quota."
    type: method
    syntax:
      description: "A separate project against which to charge quota."
      content: "#quota_project => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#quota_project=
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#quota_project=
    name: quota_project=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: quota_project=
    summary: "A separate project against which to charge quota."
    type: method
    syntax:
      description: "A separate project against which to charge quota."
      content: "#quota_project= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#rpcs
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration#rpcs
    name: rpcs
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: rpcs
    summary: "Configurations for individual RPCs"
    type: method
    syntax:
      description: "Configurations for individual RPCs"
      content: "#rpcs => Rpcs"
      parameters:
        []
      return:
          type:
            - "Rpcs"
references: 
  - uid: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration::Rpcs
    fullName: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration::Rpcs
    name: Rpcs
    module: google-cloud-vision-v1
    id: Rpcs
    summary: "Configuration RPC class for the ProductSearch API.

Includes fields providing the configuration for each RPC in this service.
Each configuration object is of type `Gapic::Config::Method` and includes
the following configuration fields:

 *  `timeout` (*type:* `Numeric`) - The call timeout in seconds
 *  `metadata` (*type:* `Hash{Symbol=>String}`) - Additional gRPC headers
 *  `retry_policy (*type:* `Hash`) - The retry policy. The policy fields
    include the following keys:
     *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
     *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
     *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
     *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
        trigger a retry."
    parent: Google::Cloud::Vision::V1::ProductSearch::Client::Configuration

