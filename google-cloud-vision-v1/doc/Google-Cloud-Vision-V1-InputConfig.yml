### YamlMime:UniversalReference
items:
  - uid: Google::Cloud::Vision::V1::InputConfig
    children: 
      - Google::Cloud::Vision::V1::InputConfig#gcs_source
      - Google::Cloud::Vision::V1::InputConfig#content
      - Google::Cloud::Vision::V1::InputConfig#mime_type
    fullName: Google::Cloud::Vision::V1::InputConfig
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: InputConfig
    summary: "The desired input location and metadata."
    type: 'class'
  - uid: Google::Cloud::Vision::V1::InputConfig#gcs_source
    fullName: Google::Cloud::Vision::V1::InputConfig#gcs_source
    name: gcs_source
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: gcs_source
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#gcs_source => ::Google::Cloud::Vision::V1::GcsSource"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::GcsSource"
          description: "The Google Cloud Storage location to read the input from."
  - uid: Google::Cloud::Vision::V1::InputConfig#gcs_source=
    fullName: Google::Cloud::Vision::V1::InputConfig#gcs_source=
    name: gcs_source=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: gcs_source=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#gcs_source= => ::Google::Cloud::Vision::V1::GcsSource"
      parameters:
        []
      return:
          type:
            - "::Google::Cloud::Vision::V1::GcsSource"
          description: "The Google Cloud Storage location to read the input from."
  - uid: Google::Cloud::Vision::V1::InputConfig#content
    fullName: Google::Cloud::Vision::V1::InputConfig#content
    name: content
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: content
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#content => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "File content, represented as a stream of bytes.
Note: As with all `bytes` fields, protobuffers use a pure binary
representation, whereas JSON representations use base64.

Currently, this field only works for BatchAnnotateFiles requests. It does
not work for AsyncBatchAnnotateFiles requests."
  - uid: Google::Cloud::Vision::V1::InputConfig#content=
    fullName: Google::Cloud::Vision::V1::InputConfig#content=
    name: content=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: content=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#content= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "File content, represented as a stream of bytes.
Note: As with all `bytes` fields, protobuffers use a pure binary
representation, whereas JSON representations use base64.

Currently, this field only works for BatchAnnotateFiles requests. It does
not work for AsyncBatchAnnotateFiles requests."
  - uid: Google::Cloud::Vision::V1::InputConfig#mime_type
    fullName: Google::Cloud::Vision::V1::InputConfig#mime_type
    name: mime_type
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: mime_type
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#mime_type => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The type of the file. Currently only 'application/pdf', 'image/tiff' and
'image/gif' are supported. Wildcards are not supported."
  - uid: Google::Cloud::Vision::V1::InputConfig#mime_type=
    fullName: Google::Cloud::Vision::V1::InputConfig#mime_type=
    name: mime_type=
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: mime_type=
    summary: ""
    type: method
    syntax:
      description: ""
      content: "#mime_type= => ::String"
      parameters:
        []
      return:
          type:
            - "::String"
          description: "The type of the file. Currently only 'application/pdf', 'image/tiff' and
'image/gif' are supported. Wildcards are not supported."
references: []
