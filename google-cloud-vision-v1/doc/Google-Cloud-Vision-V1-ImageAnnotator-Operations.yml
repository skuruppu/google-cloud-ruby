### YamlMime:UniversalReference
items:
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations
    children: 
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations.configure
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations#configure
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations#initialize
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations#list_operations
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations#get_operation
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations#delete_operation
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations#cancel_operation
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations#wait_operation
      - Google::Cloud::Vision::V1::ImageAnnotator::Operations::Configuration
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: Operations
    summary: "Service that implements Longrunning Operations API."
    type: 'class'
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations.configure
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations.configure
    name: configure
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: configure
    summary: "Configuration for the ImageAnnotator Operations API."
    type: method
    syntax:
      description: "Configuration for the ImageAnnotator Operations API."
      content: "#configure => Operations::Configuration"
      parameters:
        []
      return:
          type:
            - "Operations::Configuration"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations#configure
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations#configure
    name: configure
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: configure
    summary: "Configure the ImageAnnotator Operations instance.

The configuration is set to the derived mode, meaning that values can be changed,
but structural changes (adding new fields, etc.) are not allowed. Structural changes
should be made on {Operations.configure}."
    type: method
    syntax:
      description: "Configure the ImageAnnotator Operations instance.

The configuration is set to the derived mode, meaning that values can be changed,
but structural changes (adding new fields, etc.) are not allowed. Structural changes
should be made on {Operations.configure}."
      content: "#configure => Operations::Configuration"
      parameters:
        []
      return:
          type:
            - "Operations::Configuration"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations#initialize
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations#initialize
    name: initialize
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: initialize
    summary: "Create a new Operations client object."
    type: method
    syntax:
      description: "Create a new Operations client object."
      content: "#initialize => Operations"
      parameters:
        []
      return:
          type:
            - "Operations"
          description: "a new instance of Operations"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations#list_operations
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations#list_operations
    name: list_operations
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: list_operations
    summary: "Lists operations that match the specified filter in the request. If the
server doesn't support this method, it returns `UNIMPLEMENTED`.

NOTE: the `name` binding allows API services to override the binding
to use different resource name schemes, such as `users/*/operations`. To
override the binding, API services can add a binding such as
`'/v1/{name=users/*}/operations'` to their service configuration.
For backwards compatibility, the default name includes the operations
collection id, however overriding users must ensure the name binding
is the parent resource, without the operations collection id."
    type: method
    syntax:
      description: "Lists operations that match the specified filter in the request. If the
server doesn't support this method, it returns `UNIMPLEMENTED`.

NOTE: the `name` binding allows API services to override the binding
to use different resource name schemes, such as `users/*/operations`. To
override the binding, API services can add a binding such as
`'/v1/{name=users/*}/operations'` to their service configuration.
For backwards compatibility, the default name includes the operations
collection id, however overriding users must ensure the name binding
is the parent resource, without the operations collection id."
      content: "#list_operations => ::Gapic::PagedEnumerable<::Gapic::Operation>"
      parameters:
        []
      return:
          type:
            - "::Gapic::PagedEnumerable<::Gapic::Operation>"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations#get_operation
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations#get_operation
    name: get_operation
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: get_operation
    summary: "Gets the latest state of a long-running operation.  Clients can use this
method to poll the operation result at intervals as recommended by the API
service."
    type: method
    syntax:
      description: "Gets the latest state of a long-running operation.  Clients can use this
method to poll the operation result at intervals as recommended by the API
service."
      content: "#get_operation => ::Gapic::Operation"
      parameters:
        []
      return:
          type:
            - "::Gapic::Operation"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations#delete_operation
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations#delete_operation
    name: delete_operation
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: delete_operation
    summary: "Deletes a long-running operation. This method indicates that the client is
no longer interested in the operation result. It does not cancel the
operation. If the server doesn't support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`."
    type: method
    syntax:
      description: "Deletes a long-running operation. This method indicates that the client is
no longer interested in the operation result. It does not cancel the
operation. If the server doesn't support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`."
      content: "#delete_operation => ::Google::Protobuf::Empty"
      parameters:
        []
      return:
          type:
            - "::Google::Protobuf::Empty"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations#cancel_operation
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations#cancel_operation
    name: cancel_operation
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: cancel_operation
    summary: "Starts asynchronous cancellation on a long-running operation.  The server
makes a best effort to cancel the operation, but success is not
guaranteed.  If the server doesn't support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`.  Clients can use
Operations.GetOperation or
other methods to check whether the cancellation succeeded or whether the
operation completed despite cancellation. On successful cancellation,
the operation is not deleted; instead, it becomes an operation with
an {::Google::Longrunning::Operation#error Operation.error} value with a {::Google::Rpc::Status#code google.rpc.Status.code} of 1,
corresponding to `Code.CANCELLED`."
    type: method
    syntax:
      description: "Starts asynchronous cancellation on a long-running operation.  The server
makes a best effort to cancel the operation, but success is not
guaranteed.  If the server doesn't support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`.  Clients can use
Operations.GetOperation or
other methods to check whether the cancellation succeeded or whether the
operation completed despite cancellation. On successful cancellation,
the operation is not deleted; instead, it becomes an operation with
an {::Google::Longrunning::Operation#error Operation.error} value with a {::Google::Rpc::Status#code google.rpc.Status.code} of 1,
corresponding to `Code.CANCELLED`."
      content: "#cancel_operation => ::Google::Protobuf::Empty"
      parameters:
        []
      return:
          type:
            - "::Google::Protobuf::Empty"
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations#wait_operation
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations#wait_operation
    name: wait_operation
    langs:
      - ruby
    module: google-cloud-vision-v1
    id: wait_operation
    summary: "Waits until the specified long-running operation is done or reaches at most
a specified timeout, returning the latest state.  If the operation is
already done, the latest state is immediately returned.  If the timeout
specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
timeout is used.  If the server does not support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`.
Note that this method is on a best-effort basis.  It may return the latest
state before the specified timeout (including immediately), meaning even an
immediate response is no guarantee that the operation is done."
    type: method
    syntax:
      description: "Waits until the specified long-running operation is done or reaches at most
a specified timeout, returning the latest state.  If the operation is
already done, the latest state is immediately returned.  If the timeout
specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
timeout is used.  If the server does not support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`.
Note that this method is on a best-effort basis.  It may return the latest
state before the specified timeout (including immediately), meaning even an
immediate response is no guarantee that the operation is done."
      content: "#wait_operation => ::Gapic::Operation"
      parameters:
        []
      return:
          type:
            - "::Gapic::Operation"
references: 
  - uid: Google::Cloud::Vision::V1::ImageAnnotator::Operations::Configuration
    fullName: Google::Cloud::Vision::V1::ImageAnnotator::Operations::Configuration
    name: Configuration
    module: google-cloud-vision-v1
    id: Configuration
    summary: "Configuration class for the Operations API.

This class represents the configuration for Operations,
providing control over timeouts, retry behavior, logging, transport
parameters, and other low-level controls. Certain parameters can also be
applied individually to specific RPCs. See
{::Google::Longrunning::Operations::Client::Configuration::Rpcs}
for a list of RPCs that can be configured independently.

Configuration can be applied globally to all clients, or to a single client
on construction.

# Examples

To modify the global config, setting the timeout for list_operations
to 20 seconds, and all remaining timeouts to 10 seconds:

    ::Google::Longrunning::Operations::Client.configure do |config|
      config.timeout = 10.0
      config.rpcs.list_operations.timeout = 20.0
    end

To apply the above configuration only to a new client:

    client = ::Google::Longrunning::Operations::Client.new do |config|
      config.timeout = 10.0
      config.rpcs.list_operations.timeout = 20.0
    end"
    parent: Google::Cloud::Vision::V1::ImageAnnotator::Operations

